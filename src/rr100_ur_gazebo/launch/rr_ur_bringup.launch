<?xml version="1.0"?>
<launch>
    <!--
    This file 'pretends' to load a driver for a UR robot, by accepting similar
    arguments and playing a similar role (ie: starting the driver node (in this
    case Gazebo) and loading the ros_control controllers).

    Some of the arguments to this .launch file will be familiar to those using
    the ur_robot_driver with their robot.

    Other parameters are specific to Gazebo.

    Note: we spawn and start the ros_control controllers here, as they are,
    together with gazebo_ros_control, essentially the replacement for the
    driver which would be used with a real robot.
  -->
    <arg name="x" default="0.0" />
    <arg name="y" default="0.0" />
    <arg name="z" default="0.0" />
    <arg name="yaw" default="0.0" />

    <arg name="realsense_enabled" default="false" />
    <arg name="gps_enabled" default="false" />
    <arg name="rslidar_enabled" default="false" />
    <arg name="realsense_laserscan" default="false"
        doc="Convert realsense point cloud to laser scan" />

    <arg name="gui" default="true" doc="Launch with the gazebo GUI" />

    <!-- For single master bringup, run robot control on the gazebo master -->
    <include file="$(find rr100_ur_description)/launch/description.launch">
        <arg name="rslidar_enabled" value="$(arg rslidar_enabled)" />
        <arg name="realsense_enabled" value="$(arg realsense_enabled)" />
        <arg name="gps_enabled" value="$(arg gps_enabled)" />
    </include>

    <include file="$(find rr100_control)/launch/control.launch" />

    <group if="$(eval arg('realsense_enabled') and arg('realsense_laserscan'))">
        <!-- Include poincloud_to_laserscan if simulated realsense is attached -->
        <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node"
            name="realsense_to_laserscan" output="screen">
            <remap from="cloud_in" to="camera/depth/points" />
            <remap from="scan" to="scan/realsense" />
            <rosparam command="load" file="$(find rr100_gazebo)/config/pc_to_ls.yaml" />
        </node>
    </group>

    <include file="$(find ur5e_gripper_gazebo)/launch/ur5e_bringup.launch">
        <arg name="start_gazebo" value="false" />
        <arg name="load_robot" value="false" />
        <arg name="publish_state" value="false" />
        <arg name="tf_prefix" value="ur_" />
    </include>

    <!-- Spawn robot in gazebo -->
    <node name="spawn_rr100_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x)
            -y $(arg y)
            -z $(arg z)
            -Y $(arg yaw)
            -unpause
            -urdf
            -param robot_description
            -model rr100_ur" />

    <!-- Robot state publisher
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state">
        <param name="publish_frequency" type="double" value="500" />
    </node> -->

    <!-- Start Gazebo and load the empty world if requested to do so -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true" />
        <arg name="gui" value="$(arg gui)" />
    </include>

</launch>